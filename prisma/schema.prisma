// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model User {
  id           String      @id @default(uuid())
  email        String      @unique
  password     String
  name         String
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  lastLoginAt  DateTime? @map("last_login_at")

  isTwoFactorEnabled Boolean @default(false) @map("is_two_factor_enabled")
  twoFactorSecret    String?   @map("two_factor_secret")

  sessions     Session[]
  recoveryCodes RecoveryCode[]

  @@map("users")
}

model Session {
  id         String   @id @default(uuid())
  userId     String   @map("user_id")
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now()) @map("created_at")
  expiresAt  DateTime @map("expires_at")

  @@map("sessions")
}

model RecoveryCode {
  id     String @id @default(uuid())
  code   String @unique
  used   Boolean @default(false)
  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("recovery_codes")
}
